#VRML V1.0 ascii

Group {
  # Camera settings "encoded" in the VRML declaration below :
  # direction -0.001713884295896 -0.199992656707764 1.37521203669166E-006
  # up 2.7278238121653E-006 6.89664875608287E-006 1
  # gravityUp 0 0 1
  Separator {
    Transform {
      translation 0.114000000059605 73.34100341796875 1.830000042915344
      rotation 1 0 0 1.570796370506287
    }
    PerspectiveCamera {
      position 0 0 0 # camera position is expressed by translation
      orientation 0.000016389391021 1 -0.000003411170837 3.133023262023926
    }
  }

  # lights -------------------------------------------------------------------

#   PointLight {
#     location -0.48424467735151117 2.030553575594324 5.9872039198498008
#     color 0.4 0.2 0.2
#     global TRUE
#   }

#   PointLight {
#     location -11.109210014343262 -36.451499938964844 88.175689697265625
#     color 0.4 0.4 0.4
#     global TRUE
#   }

#   PointLight {
#     # direction 0 0 1
#     location 0 0 0
#     color 0.8 0.8 0.8
#     global TRUE
#   }

  # This will be used as fake light to determine shadow placement
  # when werewolves will appear. It will always stay with on = FALSE.
  # The position of this is crucial: it makes the cool effect of
  # long shadow legs on the ground when werewolves appear on the level.
  DEF FakeShadowPosition PointLight { location 0 0 1 on FALSE global TRUE }

  PointLight {
    location  10  10 100
    color 0.3 0.3 0.3
    kambiShadows TRUE
    kambiShadowsMain TRUE
    global TRUE
  }
  PointLight {
    location -10 -10 100
    color 0.3 0.3 0.3
    kambiShadows TRUE
    global TRUE
  }

  # Add some lights initially turned off, so that the total number
  # of lights equals number of werewolves appearing.
  PointLight { on FALSE global TRUE }
  PointLight { on FALSE global TRUE }
  PointLight { on FALSE global TRUE }

  # end lights ---------------------------------------------------------------

  KambiNavigationInfo {
    avatarSize [ 0.5, 2 ]
    speed 20
    headlight TRUE
    type "WALK"
    headlightNode DirectionalLight {
      ambientIntensity 0.5
      intensity 0.5
      color 1 1 1
    }
  }

  Separator {
    Rotation { rotation 1 0 0 1.57 }

    Background {
       backUrl "../../skies/stars.jpg"
       bottomUrl "../../skies/stars.jpg"
       frontUrl "../../skies/stars.jpg"
       leftUrl "../../skies/stars.jpg"
       rightUrl "../../skies/stars.jpg"
       topUrl "../../skies/stars.jpg"

#       backUrl "../../skies/sky_back.png"
#       bottomUrl "../../skies/sky_bottom.png"
#       frontUrl "../../skies/sky_front.png"
#       leftUrl "../../skies/sky_left.png"
#       rightUrl "../../skies/sky_right.png"
#       topUrl "../../skies/sky_top.png"

#       backUrl "../../skies/sky_red_back.png"
#       bottomUrl "../../skies/sky_red_bottom.png"
#       frontUrl "../../skies/sky_red_front.png"
#       leftUrl "../../skies/sky_red_left.png"
#       rightUrl "../../skies/sky_red_right.png"
#       topUrl "../../skies/sky_red_top.png"

#       backUrl "../../skies/foggy_sky_back.png"
#       bottomUrl "../../skies/foggy_sky_bottom.png"
#       frontUrl "../../skies/foggy_sky_front.png"
#       leftUrl "../../skies/foggy_sky_left.png"
#       rightUrl "../../skies/foggy_sky_right.png"
#       topUrl "../../skies/foggy_sky_top.png"
    }
  }

  WWWInline { name "castle_hall_processed.wrl" }
}