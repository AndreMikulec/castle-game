controls:

- cannot use items now.
  cannot solve gate1 level in consequence, cannot heal.

- cannot enter menu from game. So cannot enter menu, cannot enter debug menu.

- cannot restart game / back to menu.

- Android: different walk touch control (rotate on drag),  and then rotate faster.

  special button to attack?

  Also buttons to enter menu, show items, use items (just click on them) etc.

- Allow scaling touch control size to screen size?
  Allow scaling it by user preference?

  then remove:
  NewControl.Scale := 2; // TODO: hardcoded

- when dead: now even dragging not possible
------------------------------------------------------------------------------
- CGE: sound: hm, various sounds just don't play.
  - footsteps
  - sword swing
  - music on gate, on castle_hall, on e1m1 (but loads ok, from wav or vorbis).
  Possibly some mixing problem? Available sound sources more limited?

  Or maybe we set sound.xml too late? We have lots of warnings in log:
    Warning: Sound: Unknown sound name "player_footsteps_default"
  ... yeah, we just initialize sound.xml too late. Not related to Android at all.

  SHOULD BE FIXED NOW, recheck on Android to be sure.

- on some phones (miu) some 3d stuff (balls, alien eyes) is not displayed.
  But this is not reproducible on Nexus 5.
  Maybe we just exhaust memory?

- shader water on fountain level adjust to GLES.
  Why it still crashes? should be disabled!

- progress image - sometimes still doesn't show?

- once debug menu easily reachable, revert castle_gall and cages levels visible by default?

- enter over paused scene manager (game menu on hello world leve)
  still causes "notifications" dark area appear

- SetCurrentMenu can become local utility of particular states.
  we should not modify Window.Controls all the time for this.

  - then fix the bug: FadeRect of controls menu may be over menu.

- game menu:
         // TODO:
         if StateControlsMenu.ExitWithEscape
           then pop self

- restore ability to close window after asking on desktop?

  procedure CloseQuery(Container: TUIContainer);
  begin
    if MessageYesNo(Window, 'Are you sure you want to quit ?') then
      UserQuit := true;
  end;

- Application.Quit
  does nothing on Android. just remove? or implement on android?

- in game.pas initialization:

  // TODO
  // Window.Container.UIScaling := usEncloseReferenceSize;
  // Window.Container.UIReferenceWidth := ViewportWidth;
  // Window.Container.UIReferenceHeight := 1600;

  then remove FontSize force in gamegeneralmenu.pas
  and fix "bonus demo levels" string

- // TODO, test results, also compress textures on Android
  // TextureMemoryProfiler.Enabled := true;

- // TODO: when to save config on Android? (these 4 lines at the end
  of lpr)

- make all textures already scaled to po2

- remove delays when moving by menus and something gets initialized.

- remove CGE deprecation warnings

- Remove jumping on 1st level?

- ifdef out shadow option for now

- add ads from time to time

- werewolves on doom level too fast anims? (bug KAnim->castle scene? or not?)
------------------------------------------------------------------------------
- CGE: API improvements ideas:
  - Add to CGE nice warning when reading from assets before activ:
    It seems you're trying to read game data (stuff in ApplicationData() on Android) before the activity has started, that is: before we called Application.OnInitialize. Usually this happens if you try to read some file from Pascal unit's "initialization" section (like SoundEngine.RepositoryURL or MaterialProperties.URL). You have to change your code to do this later, in Application.OnInitialize or later, it is impossible to read files earlier.

  - mark
    Resources.LoadFromFiles
    Levels.LoadFromFiles
    undefined on Android? Marked with "platform" everywhere?

    hmm, or maybe we should generate our own hidden "Table of contents" when creating apk,
    and read file list from there?

  - Move touch device ctrl to SceneManager?

    Initializing touch controls here, as opposed to using TCastleWindowTouch, makes them 1. working also in cases of custom scene managers, viewports and cameras. Whereas, TCastleWindowTouch assumes a central scene manager and camera. 2. connects this with speciic SceneManager.Camera. So you can have >1 viewport with touch control and this will still work.

    Also, this way touch control may be positioned within viewport (if TouchInterfaceWithinViewport, default true because it's better for multiple viewports), not just within window. Which (may) be an advantage.

    TODO: Size touch interface to always fit within viewport, in the 1st case.
------------------------------------------------------------------------------
possible kanim optimizations:

- If necessary, limit kanim smoothness.

- If needed, add interpolation at runtime to TNodeInterpolator. Make it possible to avoid at least half of ForceAnimationPose for blended objects with all opaque? Or maybe use Clone() like in Escape?
